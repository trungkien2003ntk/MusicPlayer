<Window x:Class="MVVM_Basics.Views.MessageAndNotification.CustomMessageBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVM_Basics.Views.MessageAndNotification"
        mc:Ignorable="d"
        
        Background="Transparent"
        WindowStyle="None"
        WindowStartupLocation="CenterOwner"
        AllowsTransparency="True"
        Height="150" Width="313"
        d:DesignHeight="150" d:DesignWidth="313"
        FontFamily="{StaticResource MainFont}"
        >
    <Window.Resources>
        <!--#region Color brush-->
        <SolidColorBrush x:Key="ButtonNo.MouseOver.Background" Color="#1fdf64"/>
        <SolidColorBrush x:Key="ButtonNo.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonNo.Pressed.Background" Color="#169c46"/>
        <SolidColorBrush x:Key="ButtonNo.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonNo.Disabled.Background" Color="#1fdf64"/>
        <SolidColorBrush x:Key="ButtonNo.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonNo.Disabled.Foreground" Color="#FF838383"/>

        <SolidColorBrush x:Key="ButtonYes.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonYes.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonYes.Pressed.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonYes.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonYes.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonYes.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonYes.Disabled.Foreground" Color="Transparent"/>
        <!--#endregion Color brush-->


        <!--Button Yes-->
        <Style x:Key="btnYesStyle" TargetType="Button">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="22"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>
            </Style.Resources>
            <Setter Property="Width" Value="135"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Margin" Value="0 0 0 10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#6a6a6a"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Width" Value="138"/>
                    <Setter Property="Height" Value="48"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="#969696"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Width" Value="135"/>
                    <Setter Property="Height" Value="45"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Button No-->
        <Style x:Key="btnNoStyle" TargetType="Button">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="22"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>
            </Style.Resources>
            <Setter Property="Width" Value="135"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Margin" Value="0 0 0 10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="#1ed760"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Width" Value="138"/>
                    <Setter Property="Height" Value="48"/>
                    <Setter Property="FontSize" Value="16"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Width" Value="135"/>
                    <Setter Property="Height" Value="45"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Textblock-->
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="15"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>

        <!--Button No Template-->
        <ControlTemplate x:Key="NoButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNo.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonNo.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNo.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonNo.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNo.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonNo.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonNo.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Button Yes Template-->
        <ControlTemplate x:Key="YesButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonYes.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonYes.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonYes.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonYes.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonYes.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonYes.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonYes.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Border Background="White" CornerRadius="12" VerticalAlignment="Center" HorizontalAlignment="Center">
        <Grid Height="150" Width="313">

            <Grid.RowDefinitions>
                <RowDefinition Height="1.0*"/>
                <RowDefinition Height="0.8*"/>
                <RowDefinition Height="1.7*"/>
            </Grid.RowDefinitions>

            <!--Title-->
            <TextBlock Grid.Row="0" x:Name="txblTitle" 
                       VerticalAlignment="Bottom"
                       FontWeight="DemiBold" FontSize="17"
                       Margin="15 0 0 5"
                       Text="{Binding MessageBoxTitle}"
                       d:Text="Already added">
            </TextBlock>
            <!--Message-->

            <TextBlock Grid.Row="1" x:Name="txblMessage" 
                           VerticalAlignment="Top"
                           FontWeight="Normal" FontSize="14"
                           Margin="15 0 0 0"
                           Text="{Binding MessageBoxMessage}"
                           d:Text="This is already in your playlist"/>

            <!--Options-->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button x:Name="btnYes"  Grid.Column="0" Content="{Binding YesBtnContent}" 
                        Background="White" 
                        Click="btnYes_Click"
                        Template="{DynamicResource YesButtonTemplate}"
                        Style="{StaticResource btnYesStyle}"
                        d:Content="Add anyway"/>
                <Button  x:Name="btnNo"  Grid.Column="1" Content="{Binding NoBtnContent}"
                        Click="btnNo_Click"
                        Template="{DynamicResource NoButtonTemplate}"
                        Style="{StaticResource btnNoStyle}"
                        d:Content="Don't add"/>


            </Grid>
        </Grid>
    </Border>
</Window>
