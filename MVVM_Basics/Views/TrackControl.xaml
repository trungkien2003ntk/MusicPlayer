<UserControl x:Class="MVVM_Basics.Views.TrackControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVM_Basics.Views"
             
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MainFont}"
            
             BorderBrush="Transparent"
             DataContext="{DynamicResource TrackControlVM}"
             mc:Ignorable="d" 
             d:DesignHeight="90" d:DesignWidth="800"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
    <UserControl.Resources>
        <ControlTemplate x:Key="ButtonTemplate1" TargetType="{x:Type ButtonBase}">
            <Grid>
                <AdornerDecorator CacheMode="{Binding (wpf:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (wpf:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{Binding (wpf:ElevationAssist.Elevation), Converter={x:Static converters:ShadowConverter.Instance}, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ProgressBar x:Name="ProgressBar" Background="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (wpf:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (wpf:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (wpf:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding (wpf:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (wpf:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (wpf:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Visibility="{Binding (wpf:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}}">
                            <ProgressBar.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth"/>
                                    <Binding ElementName="border" Path="ActualHeight"/>
                                    <Binding ElementName="border" Path="CornerRadius"/>
                                    <Binding ElementName="border" Path="BorderThickness"/>
                                </MultiBinding>
                            </ProgressBar.Clip>
                        </ProgressBar>
                    </Grid>
                </AdornerDecorator>
                <wpf:Ripple ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                    <wpf:Ripple.Clip>
                        <MultiBinding Converter="{StaticResource BorderClipConverter}">
                            <Binding ElementName="border" Path="ActualWidth"/>
                            <Binding ElementName="border" Path="ActualHeight"/>
                            <Binding ElementName="border" Path="CornerRadius"/>
                            <Binding ElementName="border" Path="BorderThickness"/>
                        </MultiBinding>
                    </wpf:Ripple.Clip>
                </wpf:Ripple>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="wpf:ShadowAssist.Darken" TargetName="border" Value="True"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" Value="0.38"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid Background="#181818">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="1.5*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <MediaElement x:Name="mediaPlayer" Volume="1" Source="{Binding Source}" LoadedBehavior="Manual" UnloadedBehavior="Manual">
            
        </MediaElement>
        <Grid Name="ControllerGrid" Grid.Row="1" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="35"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>


            <Button Grid.Column="0"
                    Template="{DynamicResource ButtonTemplate1}"
                    Style="{DynamicResource trackControlBtnSkip}"
                    Content="{materialDesign:PackIcon Kind=SkipPrevious,Size=30}"/>
            <ToggleButton Grid.Column="1"
                          Background="White"
                          Foreground="Black"
                          Width="{Binding ElementName=ControllerGrid, Path=ColumnDefinitions[1].Width.Value}"
                          Height="{Binding ElementName=ControllerGrid, Path=ColumnDefinitions[1].Width.Value}"
                          
                          Style="{DynamicResource MaterialDesignActionToggleButton}"
                          ToolTip="MaterialDesignActionLightToggleButton"
                          Content="{materialDesign:PackIcon Kind=Play,Size=30}"
                          materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Pause,Size=30}"
                          IsChecked="{Binding IsPlaying}"/>
            
            <Button Grid.Column="2" 
                    Template="{DynamicResource ButtonTemplate1}"
                    Style="{DynamicResource trackControlBtnSkip}"
                    Content="{materialDesign:PackIcon Kind=SkipNext,Size=30}"/>
            
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="80"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"
                       x:Name="TxblPlayedDuration"
                       Style="{DynamicResource trackControlTxblDuration}"
                       Text="{Binding CurrDuration, StringFormat={}{0:mm}:{0:ss}}"/>
            <TextBlock Grid.Column="2"
                       x:Name="TxblTotalDuration"
                       Style="{DynamicResource trackControlTxblDuration}"
                       Text="{Binding ElementName=MediaPlayer, Path=Position, StringFormat={}{0:hh}:{0:mm}:{0:ss}}"/>

            <Slider x:Name="sliderTime" Grid.Column="1"
                    Style="{DynamicResource SliderStyleTrack}"
                    ValueChanged="sliderTime_ValueChanged"
                    VerticalAlignment="Center"/>
        </Grid>
    </Grid>
</UserControl>
