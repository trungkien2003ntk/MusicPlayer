<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:viewmodel="clr-namespace:MVVM_Basics.ViewModels"
                    xmlns:view="clr-namespace:MVVM_Basics.Views"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:converters="clr-namespace:MVVM_Basics.Views.Converter"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Images-->
    <BitmapImage x:Key="DefaultPlaylistCoverImage" UriSource="pack://application:,,,/Images/DefaultPlaylistCoverImage.jpeg"/>
    
    
    <!--DataTemplates-->
    <DataTemplate DataType="{x:Type viewmodel:HomePageViewModel}">
        <view:HomePage />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewmodel:SearchPageViewModel}">
        <view:SearchPage/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewmodel:PlaylistPageViewModel}">
        <view:PlaylistPage/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewmodel:LikedSongsPageViewModel}">
        <view:LikedSongsPage/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewmodel:LibraryPageViewModel}">
        <view:LibraryPage/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewmodel:QueuePageViewModel}">
        <view:QueuePage/>
    </DataTemplate>
    

    <!-- Font Family -->
    <FontFamily x:Key="MainFont">"pack://application:,,,/Fonts/#SVN-Product Sans"</FontFamily>
    <FontFamily x:Key="CircularBlack">pack://application:,,,/Fonts/#SVN-Product Sans</FontFamily>
    <FontFamily x:Key="CircularBook">pack://application:,,,/Fonts/#SVN-Product Sans</FontFamily>
    

    <!--Solid color-->
    <SolidColorBrush x:Key="ContextMenuNormalBackground" Color="#282828"/>
    <SolidColorBrush x:Key="ContextMenuHoverBackground" Color="#3e3e3e"/>
    <SolidColorBrush x:Key="titleBarBackground" Color="#101010" Opacity="1"/>

    
    <!--Gradient Color-->
    <LinearGradientBrush x:Key="gradientHomeBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#121212" Offset="0"/>
        <GradientStop Color="#121212" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="gradientCardBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#171717" Offset="0"/>
        <GradientStop Color="#181818" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="gradientCardBackground.Hover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#272727" Offset="0"/>
        <GradientStop Color="#282828" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="gradientLikedSongsIcon" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#1cb050" Offset="0.0" />
        <GradientStop Color="#22d661" Offset="0.3" />
        <GradientStop Color="#b1d5cc" Offset="0.8" />
        <GradientStop Color="#b1d5cc" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="gradientLikedSongsHeaderBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#24ef6b" Offset="0" />
        <GradientStop Color="#1dc859" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="gradientLikedSongsContentBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#18a248" Offset="0" />
        <GradientStop Color="#106e31" Offset="0.1" />
        <GradientStop Color="#101010" Offset="0.3" />
        <GradientStop Color="#121212" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="gradientLikedSongsBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#24ef6b" Offset="0.1" />
        <GradientStop Color="#20cc5b" Offset="0.2" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="gradientPlaylistBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#debf81" Offset="0.1" />
        <GradientStop Color="#debf81" Offset="0.2" />
        <GradientStop Color="#101010" Offset="0.8" />
        <GradientStop Color="#121212" Offset="1.0" />
    </LinearGradientBrush>
        
    <!--Style-->
    

    <Style x:Key="btnLikeStyle" TargetType="ToggleButton" x:Name="btnLike">
        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=HeartOutline,Size=40}"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="OuterBorder" BorderThickness="0,1,0,0" >
                        <Border Name="InnerBorder" BorderThickness="0,1,0,1" >
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Heart,Size=40}"/>
                            <Setter Property="Foreground" Value="#1cc759"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=HeartOutline,Size=40}"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Heart,Size=40}"/>
                <Setter Property="Foreground" Value="#1cc759"/>
            </Trigger>
            
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=HeartOutline,Size=40}"/>
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="txblTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource CircularBlack}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="Margin" Value="0 20 0 20"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="TextDecorations" Value="None"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="txblCardStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource CircularBook}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
</ResourceDictionary>